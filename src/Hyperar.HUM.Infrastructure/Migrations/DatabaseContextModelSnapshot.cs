// <auto-generated />
using System;
using Hyperar.HUM.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hyperar.HUM.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hyperar.HUM.Domain.Country", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(-1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<long>("LeagueHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<string>("TimeFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.HasKey("HattrickId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("LeagueHattrickId")
                        .IsUnique();

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-1);

                    b.Property<decimal>("ConvertionRate")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.HasKey("Id");

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.League", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(-1);

                    b.Property<int>("ActiveTeams")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<int>("ActiveUsers")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("FifthDailyUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(22);

                    b.Property<DateTime>("FirstDailyUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(18);

                    b.Property<byte[]>("FlagBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(23);

                    b.Property<DateTime>("FourthDailyUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(21);

                    b.Property<long?>("JuniorNationalTeamHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(9);

                    b.Property<int>("LeagueLevels")
                        .HasColumnType("int")
                        .HasColumnOrder(13);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<DateTime?>("NextCupMatchDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(17);

                    b.Property<DateTime>("NextEconomyUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(15);

                    b.Property<DateTime?>("NextSeriesMatchDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(16);

                    b.Property<DateTime>("NextTrainingUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(14);

                    b.Property<int>("Season")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<int>("SeasonOffset")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("SecondDailyUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(19);

                    b.Property<long?>("SeniorNationalTeamHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(8);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("ThirdDailyUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(20);

                    b.Property<int>("WaitingUsers")
                        .HasColumnType("int")
                        .HasColumnOrder(12);

                    b.Property<int>("Week")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(4);

                    b.HasKey("HattrickId");

                    b.ToTable("League", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.LeagueCup", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(-1);

                    b.Property<long>("LeagueHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Level")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<int?>("SubType")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("Week")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("WeeksLeft")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.HasKey("HattrickId");

                    b.HasIndex("LeagueHattrickId");

                    b.ToTable("LeagueCup", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Manager", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(-1);

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<decimal>("CurrencyRate")
                        .HasPrecision(5, 1)
                        .HasColumnType("decimal")
                        .HasColumnOrder(3);

                    b.Property<int>("SupporterTier")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HattrickId");

                    b.HasIndex("CountryHattrickId");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("Manager", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.ManagerAvatarLayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<long>("ManagerHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("ManagerHattrickId");

                    b.ToTable("ManagerAvatarLayer");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.OAuthToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(4);

                    b.Property<int>("Scope")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("OAuthToken", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Region", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(-1);

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.HasKey("HattrickId");

                    b.HasIndex("CountryHattrickId");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorPlayer", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(-1);

                    b.Property<int>("AgeDays")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("AgeYears")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("Aggressiveness")
                        .HasColumnType("int")
                        .HasColumnOrder(12);

                    b.Property<int>("Agreeability")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<int>("BookingStatus")
                        .HasColumnType("int")
                        .HasColumnOrder(16);

                    b.Property<int>("CareerAssists")
                        .HasColumnType("int")
                        .HasColumnOrder(29);

                    b.Property<int>("CareerGoals")
                        .HasColumnType("int")
                        .HasColumnOrder(27);

                    b.Property<int>("CareerHattricks")
                        .HasColumnType("int")
                        .HasColumnOrder(28);

                    b.Property<int?>("Category")
                        .HasColumnType("int")
                        .HasColumnOrder(18);

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<bool>("HasMotherClubBonus")
                        .HasColumnType("bit")
                        .HasColumnOrder(7);

                    b.Property<int>("HealthStatus")
                        .HasColumnType("int")
                        .HasColumnOrder(17);

                    b.Property<int>("Honesty")
                        .HasColumnType("int")
                        .HasColumnOrder(13);

                    b.Property<DateTime>("JoinedOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<int>("JuniorNationalTeamMatches")
                        .HasColumnType("int")
                        .HasColumnOrder(19);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<int>("Leadership")
                        .HasColumnType("int")
                        .HasColumnOrder(14);

                    b.Property<string>("NickName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(8);

                    b.Property<int>("Salary")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<int>("SeasonCupGoals")
                        .HasColumnType("int")
                        .HasColumnOrder(25);

                    b.Property<int>("SeasonFriendlyGoals")
                        .HasColumnType("int")
                        .HasColumnOrder(26);

                    b.Property<int>("SeasonSeriesGoals")
                        .HasColumnType("int")
                        .HasColumnOrder(24);

                    b.Property<int>("SeniorNationalTeamMatches")
                        .HasColumnType("int")
                        .HasColumnOrder(20);

                    b.Property<long>("SeniorTeamHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ShirtNumber")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<int>("Specialty")
                        .HasColumnType("int")
                        .HasColumnOrder(15);

                    b.Property<string>("Statement")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(9);

                    b.Property<int>("TeamAssists")
                        .HasColumnType("int")
                        .HasColumnOrder(23);

                    b.Property<int>("TeamGoals")
                        .HasColumnType("int")
                        .HasColumnOrder(22);

                    b.Property<int>("TeamMatches")
                        .HasColumnType("int")
                        .HasColumnOrder(21);

                    b.HasKey("HattrickId");

                    b.HasIndex("CountryHattrickId");

                    b.HasIndex("SeniorTeamHattrickId");

                    b.ToTable("SeniorPlayer", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorPlayerAvatarLayer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<long>("SeniorPlayerHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("SeniorPlayerHattrickId");

                    b.ToTable("SeniorPlayerAvatarLayer");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorPlayerSkillSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-1);

                    b.Property<int>("Defender")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<int>("Experience")
                        .HasColumnType("int")
                        .HasColumnOrder(12);

                    b.Property<int>("Form")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("Keeper")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int>("Loyalty")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<int>("Passing")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<int>("Playmaking")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<int>("Scoring")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<int>("Season")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<long>("SeniorPlayerHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("SetPieces")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<int>("Stamina")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("TotalSkillIndex")
                        .HasColumnType("int")
                        .HasColumnOrder(13);

                    b.Property<int>("Week")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("Winger")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("SeniorPlayerHattrickId");

                    b.ToTable("SeniorPlayerSkillSet", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorTeam", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(-1);

                    b.Property<byte[]>("AwayMatchKitBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(19);

                    b.Property<bool>("CanBookMidweekFriendly")
                        .HasColumnType("bit")
                        .HasColumnOrder(12);

                    b.Property<bool>("CanBookWeekendFriendly")
                        .HasColumnType("bit")
                        .HasColumnOrder(13);

                    b.Property<DateTime>("FoundedOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(2);

                    b.Property<int>("GlobalPowerRating")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<byte[]>("HomeMatchKitBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(18);

                    b.Property<bool>("IsPlayingCup")
                        .HasColumnType("bit")
                        .HasColumnOrder(4);

                    b.Property<long>("LeagueHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("LeaguePowerRating")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.Property<int>("LeagueRank")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<byte[]>("LogoBytes")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(17);

                    b.Property<long>("ManagerHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(0);

                    b.Property<int>("PowerRating")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<long>("RegionHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("RegionPowerRating")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<long>("SeriesHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(14);

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(15);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<int>("TeamIndex")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<long>("TrainerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(16);

                    b.Property<int>("UndefeatedStreak")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<int>("WinningStreak")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.HasKey("HattrickId");

                    b.HasIndex("LeagueHattrickId");

                    b.HasIndex("ManagerHattrickId");

                    b.HasIndex("RegionHattrickId");

                    b.ToTable("SeniorTeam", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-1);

                    b.Property<DateTime?>("LastDownloadDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(0);

                    b.Property<long?>("SelectedTeamHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("UserProfile", (string)null);
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.UserProfileSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(-1);

                    b.Property<bool>("UseFramelessAvatars")
                        .HasMaxLength(256)
                        .HasColumnType("bit")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("UserProfileSettings");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Country", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.Currency", "Currency")
                        .WithMany("Countries")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Country_Currency");

                    b.HasOne("Hyperar.HUM.Domain.League", "League")
                        .WithOne("Country")
                        .HasForeignKey("Hyperar.HUM.Domain.Country", "LeagueHattrickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Country_League");

                    b.Navigation("Currency");

                    b.Navigation("League");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.LeagueCup", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.League", "League")
                        .WithMany("Cups")
                        .HasForeignKey("LeagueHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_LeagueCup_League");

                    b.Navigation("League");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Manager", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.Country", "Country")
                        .WithMany("Managers")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Manager_Country");

                    b.HasOne("Hyperar.HUM.Domain.UserProfile", "UserProfile")
                        .WithOne("Manager")
                        .HasForeignKey("Hyperar.HUM.Domain.Manager", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Manager_UserProfile");

                    b.Navigation("Country");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.ManagerAvatarLayer", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.Manager", "Manager")
                        .WithMany("AvatarLayes")
                        .HasForeignKey("ManagerHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ManagerAvatarLayer_Manager");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.OAuthToken", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.UserProfile", "UserProfile")
                        .WithOne("OAuthToken")
                        .HasForeignKey("Hyperar.HUM.Domain.OAuthToken", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OAuthToken_UserProfile");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Region", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Region_Country");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorPlayer", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.Country", "Country")
                        .WithMany("SeniorPlayers")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_SeniorPlayer_Country");

                    b.HasOne("Hyperar.HUM.Domain.SeniorTeam", "SeniorTeam")
                        .WithMany("SeniorPlayers")
                        .HasForeignKey("SeniorTeamHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_SeniorPlayer_SeniorTeam");

                    b.Navigation("Country");

                    b.Navigation("SeniorTeam");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorPlayerAvatarLayer", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.SeniorPlayer", "SeniorPlayer")
                        .WithMany("AvatarLayers")
                        .HasForeignKey("SeniorPlayerHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_SeniorPlayerAvatarLayer_SeniorPlayer");

                    b.Navigation("SeniorPlayer");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorPlayerSkillSet", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.SeniorPlayer", "SeniorPlayer")
                        .WithMany("SeniorPlayerSkillSets")
                        .HasForeignKey("SeniorPlayerHattrickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SeniorPlayerSkillSet_SeniorPlayer");

                    b.Navigation("SeniorPlayer");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorTeam", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.League", "League")
                        .WithMany("SeniorTeams")
                        .HasForeignKey("LeagueHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_SeniorTeam_League");

                    b.HasOne("Hyperar.HUM.Domain.Manager", "Manager")
                        .WithMany("SeniorTeams")
                        .HasForeignKey("ManagerHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_SeniorTeam_Manager");

                    b.HasOne("Hyperar.HUM.Domain.Region", "Region")
                        .WithMany("SeniorTeams")
                        .HasForeignKey("RegionHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_SeniorTeam_Region");

                    b.Navigation("League");

                    b.Navigation("Manager");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.UserProfileSettings", b =>
                {
                    b.HasOne("Hyperar.HUM.Domain.UserProfile", "UserProfile")
                        .WithOne("UserProfileSettings")
                        .HasForeignKey("Hyperar.HUM.Domain.UserProfileSettings", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserProfileSettings_UserProfile");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Country", b =>
                {
                    b.Navigation("Managers");

                    b.Navigation("Regions");

                    b.Navigation("SeniorPlayers");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Currency", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.League", b =>
                {
                    b.Navigation("Country");

                    b.Navigation("Cups");

                    b.Navigation("SeniorTeams");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Manager", b =>
                {
                    b.Navigation("AvatarLayes");

                    b.Navigation("SeniorTeams");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.Region", b =>
                {
                    b.Navigation("SeniorTeams");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorPlayer", b =>
                {
                    b.Navigation("AvatarLayers");

                    b.Navigation("SeniorPlayerSkillSets");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.SeniorTeam", b =>
                {
                    b.Navigation("SeniorPlayers");
                });

            modelBuilder.Entity("Hyperar.HUM.Domain.UserProfile", b =>
                {
                    b.Navigation("Manager");

                    b.Navigation("OAuthToken");

                    b.Navigation("UserProfileSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
